AWSTemplateFormatVersion: 2010-09-09
Description: >-
  dynamodb-lambda

Transform:
  - AWS::Serverless-2016-10-31

Globals:
  Function:
    Tracing: Active
  Api:
    TracingEnabled: True

Resources:
  PutItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/put-item.putItemHandler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref MusicTable
      Environment:
        Variables:
          TABLE_NAME: !Ref MusicTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: POST

  ReadDynamoStreamFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/read-dynamo-stream.handler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Events:
        DynamoDBStreamEvent:
          Type: DynamoDB
          Properties:
            BatchSize: 10
            BisectBatchOnFunctionError: true
            Enabled: True
            MaximumBatchingWindowInSeconds: 30
            MaximumRetryAttempts: 3
            ParallelizationFactor: 1
            StartingPosition: LATEST
            Stream: !GetAtt MusicTable.StreamArn

  ReadDynamoStreamForDeletedItemsByTTLFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/read-dynamo-stream-for-deleted-items-by-ttl.handler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Events:
        DynamoDBStreamEvent:
          Type: DynamoDB
          Properties:
            BatchSize: 10
            BisectBatchOnFunctionError: true
            Enabled: True
            MaximumBatchingWindowInSeconds: 30
            MaximumRetryAttempts: 3
            ParallelizationFactor: 1
            StartingPosition: LATEST
            Stream: !GetAtt MusicTable.StreamArn
            FilterCriteria:
              Filters:
                - Pattern: '{"userIdentity":{"type":["Service"],"principalId":["dynamodb.amazonaws.com"]}}'

  MusicTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: "Music"
      AttributeDefinitions:
        - AttributeName: "artist"
          AttributeType: "S"
        - AttributeName: "songTitle"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "artist"
          KeyType: "HASH"
        - AttributeName: "songTitle"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      TimeToLiveSpecification:
        AttributeName: dateToRemove
        Enabled: true

Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
