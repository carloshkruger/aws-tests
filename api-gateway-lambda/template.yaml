AWSTemplateFormatVersion: 2010-09-09
Description: >-
  api-gateway-lambda

Transform:
  - AWS::Serverless-2016-10-31

Parameters:
  StageName:
    Type: String
    Default: development
    AllowedValues:
      - development
      - production
    Description: Stage name

Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      CacheClusterEnabled: true
      CacheClusterSize: "0.5"
      TracingEnabled: true
      StageName: !Ref StageName
      Name: !Sub "${AWS::StackName}-my-api-${StageName}"
      Models:
        Item:
          type: object
          required:
            - id
            - name
          properties:
            id:
              type: string
            name:
              type: string
      MethodSettings:
        - ResourcePath: "/*"
          HttpMethod: "*"
          ThrottlingRateLimit: 100
          ThrottlingBurstLimit: 200
          CacheDataEncrypted: false
          CacheTtlInSeconds: 300
          CachingEnabled: true
      Variables:
        StageName: !Ref StageName
        test: test

  getAllItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-all-items.getAllItemsHandler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get all items from a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SampleTable
      Environment:
        Variables:
          SAMPLE_TABLE: !Ref SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: GET
            RestApiId: !Ref ApiGatewayApi

  getByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-by-id.getByIdHandler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get one item by id from a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SampleTable
      Environment:
        Variables:
          SAMPLE_TABLE: !Ref SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{id}
            Method: GET
            RestApiId: !Ref ApiGatewayApi

  putItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/put-item.putItemHandler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SampleTable
      Environment:
        Variables:
          SAMPLE_TABLE: !Ref SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: POST
            RestApiId: !Ref ApiGatewayApi
            RequestModel:
              Model: Item
              Required: true
              ValidateBody: true
              ValidateParameters: true

  SampleTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
